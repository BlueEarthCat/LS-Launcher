name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read  # 빌드에는 읽기 권한만 필요
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npm run dist:win
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            npm run dist:mac
          else
            npm run dist:linux
          fi
        shell: bash

      - name: List Build Output
        run: ls -R dist/ || dir dist\
        shell: bash
        continue-on-error: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ls-launcher-${{ matrix.os }}
          path: dist/*
          retention-days: 1

  release:
    needs: build  # 빌드 작업 완료 후 실행
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 릴리스 생성 및 에셋 업로드 권한
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: ls-launcher-*
          merge-multiple: true

      - name: List Downloaded Artifacts
        run: ls -R artifacts/
        shell: bash
        continue-on-error: true

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: Auto-generated release for LastSaviors Launcher ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/ls-launcher-windows-latest/LastSaviors Launcher-setup-${{ github.ref_name }}.exe
          asset_name: LastSaviors-Launcher-${{ github.ref_name }}-windows-latest.exe
          asset_content_type: application/x-msdownload

      - name: Upload Release Asset (macOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/ls-launcher-macos-latest/LastSaviors Launcher-${{ github.ref_name }}.dmg
          asset_name: LastSaviors-Launcher-${{ github.ref_name }}-macos-latest.dmg
          asset_content_type: application/x-apple-diskimage

      - name: Upload Release Asset (Ubuntu)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/ls-launcher-ubuntu-latest/LastSaviors Launcher-${{ github.ref_name }}.AppImage
          asset_name: LastSaviors-Launcher-${{ github.ref_name }}-ubuntu-latest.AppImage
          asset_content_type: application/octet-stream