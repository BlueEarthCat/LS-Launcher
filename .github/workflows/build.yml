name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # 태그 푸시(v1.0.0 등)로 릴리스 트리거

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write  # 릴리스 및 에셋 업로드 권한
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci
        shell: ${{ matrix.os == 'windows-latest' && 'powershell' || 'bash' }}

      - name: Build
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npm run dist:win
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            npm run dist:mac
          else
            npm run dist:linux
          fi
        shell: ${{ matrix.os == 'windows-latest' && 'powershell' || 'bash' }}

      - name: Find Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        id: find_artifact
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            $ASSET_PATH = Get-ChildItem dist/*setup*.exe -ErrorAction SilentlyContinue | Select-Object -First 1 -ExpandProperty FullName
            if (-not $ASSET_PATH) {
              Write-Error "No matching .exe file found in dist/ for ${{ matrix.os }}"
              exit 1
            }
            Write-Output "ASSET_PATH=$ASSET_PATH" | Out-File -Append -FilePath $env:GITHUB_OUTPUT
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            ASSET_PATH=$(ls dist/*.dmg 2>/dev/null | head -n 1 || echo "")
            if [ -z "$ASSET_PATH" ]; then
              echo "No matching .dmg file found in dist/ for ${{ matrix.os }}"
              exit 1
            }
            echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_OUTPUT
          else
            ASSET_PATH=$(ls dist/*.AppImage 2>/dev/null | head -n 1 || echo "")
            if [ -z "$ASSET_PATH" ]; then
              echo "No matching .AppImage file found in dist/ for ${{ matrix.os }}"
              exit 1
            }
            echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_OUTPUT
          fi
        shell: ${{ matrix.os == 'windows-latest' && 'powershell' || 'bash' }}

      - name: Create and Upload Release
        if: startsWith(github.ref, 'refs/tags/v') && matrix.os == 'ubuntu-latest'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: Auto-generated release for LastSaviors Launcher ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ steps.find_artifact.outputs.ASSET_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}